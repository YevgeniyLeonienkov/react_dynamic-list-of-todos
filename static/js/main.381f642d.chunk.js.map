{"version":3,"sources":["components/User.js","components/TodoItem.js","components/TodoList.js","api/getData.js","App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","name","TodoItem","todo","className","id","title","components_User","htmlFor","type","checked","completed","TodoList","allTodos","sortBy","sortByName","onClick","map","components_TodoItem","getData","Object","asyncToGenerator","regenerator_default","mark","_callee","url","responseTodos","todos","responseUsers","users","data","wrap","_context","prev","next","fetch","concat","sent","json","objectSpread","find","userId","abrupt","stop","_x","apply","this","arguments","currentList","App","state","isLoaded","isLoading","dir","handleClick","_this","setState","document","getElementsByClassName","disabled","setTimeout","key","prevState","sort","b","localeCompare","components_TodoList","React","Component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.381f642d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <tr>{user.name}</tr>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoItem = ({ todo }) => (\n\n  <tr className=\"todoItem\">\n    <td>{todo.id}</td>\n    <td>{todo.title}</td>\n    <td><User user={todo.user} /></td>\n    <td>\n      <label htmlFor=\"radio\">\n        <input\n          id=\"radio\"\n          type=\"checkbox\"\n          checked={todo.completed}\n        />\n      </label>\n    </td>\n  </tr>\n\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ allTodos, sortBy, sortByName }) => (\n\n  <table className=\"todoList\">\n    <tr className=\"todoList__title\">\n      <th onClick={() => sortBy('id')}>â„–</th>\n      <th onClick={() => sortBy('title')}>Title</th>\n      <th onClick={() => sortBy()}>User</th>\n      <th onClick={() => sortBy('completed')}>Status</th>\n    </tr>\n\n    {allTodos.map(todo => (\n      <TodoItem todo={todo} />\n    ))}\n\n  </table>\n);\n\nTodoList.propTypes = {\n  allTodos: PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    map: PropTypes.func.isRequired,\n  }).isRequired,\n  sortBy: PropTypes.func.isRequired,\n  sortByName: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","export const getData = async(url) => {\n  const responseTodos = await fetch(`${url}/todos`);\n  const todos = await responseTodos.json();\n\n  const responseUsers = await fetch(`${url}/users`);\n  const users = await responseUsers.json();\n\n  const data = todos.map(todo => ({\n    ...todo,\n    user: users.find(user => (user.id === todo.userId)),\n  }));\n\n  return data;\n};\n","import React from 'react';\nimport './App.css';\n\nimport TodoList from './components/TodoList';\nimport { getData } from './api/getData';\n\nlet currentList = [];\nconst myUrl = 'https://jsonplaceholder.typicode.com';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    isLoaded: false,\n    isLoading: false,\n    dir: 'asc',\n  };\n\n  async componentDidMount() {\n    currentList = await getData(myUrl);\n  }\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    document.getElementsByClassName('loadData').disabled = true;\n\n    setTimeout(() => {\n      this.setState({\n        todos: currentList,\n        isLoaded: true,\n        isLoading: false,\n      });\n    }, 0);\n  };\n\n  sortBy = (key) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.sort((a, b) => {\n        if (key) {\n          if (prevState.dir.localeCompare('asc')) {\n            return (a[key] > b[key]) ? 1 : -1;\n          }\n\n          return (b[key] > a[key]) ? 1 : -1;\n        }\n\n        if (prevState.dir.localeCompare('asc')) {\n          return (a.user.name.localeCompare(b.user.name));\n        }\n\n        return (b.user.name.localeCompare(a.user.name));\n      }),\n      dir: prevState.dir === 'asc' ? 'desc' : 'asc',\n    }));\n  };\n\n  render() {\n    return (\n      <main>\n        { this.state.isLoaded ? (\n          <TodoList\n            allTodos={this.state.todos}\n            sortBy={this.sortBy}\n          />\n        ) : (\n          <button\n            type=\"button\"\n            className=\"loadData\"\n            onClick={this.handleClick}\n          >\n            {this.state.isLoading ? 'Loading...' : 'Load' }\n          </button>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}