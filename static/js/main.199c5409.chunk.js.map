{"version":3,"sources":["components/User.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","name","TodoItem","todo","className","id","title","components_User","htmlFor","type","checked","completed","TodoList","allTodos","sortBy","sortByName","onClick","map","components_TodoItem","currentList","getTodos","Object","asyncToGenerator","regenerator_default","mark","_callee","response","todos","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","getUsers","_ref2","_callee2","_context2","App","state","isLoaded","isLoading","dir","handleClick","_this","setState","setTimeout","key","prevState","sort","b","localeCompare","users","objectSpread","find","userId","components_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.199c5409.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <tr>{user.name}</tr>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoItem = ({ todo }) => (\n\n  <tr className=\"todoItem\">\n    <td>{todo.id}</td>\n    <td>{todo.title}</td>\n    <td><User user={todo.user} /></td>\n    <td>\n      <label htmlFor=\"radio\">\n        <input\n          id=\"radio\"\n          type=\"checkbox\"\n          checked={todo.completed}\n        />\n      </label>\n    </td>\n  </tr>\n\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ allTodos, sortBy, sortByName }) => (\n\n  <table className=\"todoList\">\n    <tr className=\"todoList__title\">\n      <th onClick={() => sortBy('id')}>â„–</th>\n      <th onClick={() => sortBy('title')}>Title</th>\n      <th onClick={() => sortBy()}>User</th>\n      <th onClick={() => sortBy('completed')}>Status</th>\n    </tr>\n\n    {allTodos.map(todo => (\n      <TodoItem todo={todo} />\n    ))}\n\n  </table>\n);\n\nTodoList.propTypes = {\n  allTodos: PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    map: PropTypes.func.isRequired,\n  }).isRequired,\n  sortBy: PropTypes.func.isRequired,\n  sortByName: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\n\nimport TodoList from './components/TodoList';\n\nlet currentList = [];\nconst todosFromServer = 'https://jsonplaceholder.typicode.com/todos';\nconst usersFromServer = 'https://jsonplaceholder.typicode.com/users';\n\nconst getTodos = async() => {\n  const response = await fetch(todosFromServer);\n  const todos = await response.json();\n\n  return todos;\n};\n\nconst getUsers = async() => {\n  const response = await fetch(usersFromServer);\n  const todos = await response.json();\n\n  return todos;\n};\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    isLoaded: false,\n    isLoading: false,\n    dir: 'asc',\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n    const users = await getUsers();\n\n    currentList = todos.map(todo => ({\n      ...todo,\n      user: users.find(user => (user.id === todo.userId)),\n    }));\n  }\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        todos: currentList,\n        isLoaded: true,\n        isLoading: false,\n      });\n    }, 0);\n  };\n\n  sortBy = (key) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.sort((a, b) => {\n        if (key) {\n          if (prevState.dir.localeCompare('asc')) {\n            return (a[key] > b[key]) ? 1 : -1;\n          }\n\n          return (b[key] > a[key]) ? 1 : -1;\n        }\n\n        if (prevState.dir.localeCompare('asc')) {\n          return (a.user.name > b.user.name) ? 1 : -1;\n        }\n\n        return (b.user.name > a.user.name) ? 1 : -1;\n      }),\n      dir: prevState.dir === 'asc' ? 'desc' : 'asc',\n    }));\n  };\n\n  render() {\n    return (\n      <main>\n        { this.state.isLoaded ? (\n          <TodoList\n            allTodos={this.state.todos}\n            sortBy={this.sortBy}\n            sortByName={this.sortByName}\n          />\n        ) : (\n          <button\n            type=\"button\"\n            className=\"loadData\"\n            onClick={this.handleClick}\n          >\n            {this.state.isLoading ? 'Loading...' : 'Load' }\n          </button>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}